//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//   : Header File.h
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#ifndef STATIC_CLIENT_H
#define STATIC_CLIENT_H
#include "Wrapper_GameFramework.h"
#include "GFX.h"
#include "Threads.h"
#include <thread>

namespace Florance_CLIENT
{
	class Static_CLIENT
	{
//	PUBLIC ===============================================================================================================================================
//  ======================================================================================================================================================
//  ======================================================================================================================================================
	public:
//	CONSTANTS ********************************************************************************************************************************************
// 	******************************************************************************************************************************************************


//	REGISTERS ********************************************************************************************************************************************
// 	******************************************************************************************************************************************************
    struct INSTANCE
    {
    // GFX
        static class GFX game_GUI;
        static class GFX* ptr_game_GUI;

    // THREADS
        static class AppThreads threads;
        static class AppThreads* ptr_Threads;

    // WRAPPER
        static class Wrapper_GameFramework wrapper_IO;
        static class Wrapper_GameFramework* ptr_Wrapper_IO;

    };

    struct THREADS
    {
    // THREADS
       // static std::thread td_1;
        static std::thread* ptr_Td_1;// = &td_1;
    };

//	CONSTRUCT & DESTRUCTION ******************************************************************************************************************************
// 	******************************************************************************************************************************************************
        Static_CLIENT()
        {
            //ctor
        }

        ~Static_CLIENT()
        {
            //dtor
        }


//	METHODS **********************************************************************************************************************************************
// 	******************************************************************************************************************************************************
//	STATIC -----------------------------------------------------------------------------------------------------------------------------------------------
        static void initialiseFramework();
        static void initialiseThreads(int init_CoreId);
        static void terminateFramework();
        static void terminateThreads();

	//	GET & SET ----------------------------------------------------------------------------------------------------------------------------------------
    // GFX
        static GFX* getPtr_Game_GUI();
    // THREADS
        static AppThreads* getPtr_Threads();
     // WRAPPER
        static Wrapper_GameFramework* getPtr_Wrapper_IO();

//	DYNAMIC ----------------------------------------------------------------------------------------------------------------------------------------------

	//	GET & SET ----------------------------------------------------------------------------------------------------------------------------------------



//	PROTECTED ============================================================================================================================================
//  ======================================================================================================================================================
//  ======================================================================================================================================================
    protected:
//	CONSTANTS ********************************************************************************************************************************************
// 	******************************************************************************************************************************************************


//	REGISTERS ********************************************************************************************************************************************
// 	******************************************************************************************************************************************************


//	METHODS **********************************************************************************************************************************************
// 	******************************************************************************************************************************************************
//	STATIC -----------------------------------------------------------------------------------------------------------------------------------------------

	//	GET & SET ----------------------------------------------------------------------------------------------------------------------------------------

//	DYNAMIC ----------------------------------------------------------------------------------------------------------------------------------------------

	//	GET & SET ----------------------------------------------------------------------------------------------------------------------------------------



//	PRIVATE ==============================================================================================================================================
//  ======================================================================================================================================================
//  ======================================================================================================================================================
	private:
//	CONSTANTS ********************************************************************************************************************************************
// 	******************************************************************************************************************************************************


//	REGISTERS ********************************************************************************************************************************************
// 	******************************************************************************************************************************************************


//	METHODS **********************************************************************************************************************************************
// 	******************************************************************************************************************************************************
//	STATIC -----------------------------------------------------------------------------------------------------------------------------------------------

	//	GET & SET ----------------------------------------------------------------------------------------------------------------------------------------

//	DYNAMIC ----------------------------------------------------------------------------------------------------------------------------------------------

	//	GET & SET ----------------------------------------------------------------------------------------------------------------------------------------


	};//End Class <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
}//End NameSpace <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
#endif // STATIC_CLIENT_H
